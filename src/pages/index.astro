---
import '../styles/home.css';

import HeadMeta from '../components/HeadMeta.astro';
import Articles from '../components/home/Articles.astro';
import Code from '../components/home/Code.astro';
import Info from '../components/home/Info.astro';
import Social from '../components/home/Social.astro';
import Talks from '../components/home/Talks.astro';
import Work from '../components/home/Work.astro';
import { SITE_DESCRIPTION, SITE_TITLE } from '../config';

const year = new Date().getFullYear();
---

<!DOCTYPE html>
<!-- Source code available at https://github.com/WesSouza/wes.dev/ -->
<html lang="en">
  <head>
    <HeadMeta title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <main class="CardWall">
      <Info />
      <Social />
      <Talks />
      <Articles />
      <Code />
      <Work />
    </main>
    <footer class="Footer">
      <abbr title="Copyright">&copy;</abbr>
      <a href="/archive/1999/">1999</a>,
      <a href="/archive/2014/">2014</a>,
      <a href="/archive/2017/">2017</a>,
      <a href="/archive/2019/">2019</a>, {year} Wes Souza
    </footer>

    <style>
      .CardWall {
        display: grid;
        grid-template:
          'Talks Info Code' 35%
          'Talks Info .' 50px
          'Talks Info Social' 6.666666667%
          '. Info Social' 50px
          'Articles Info Social' 1.666666667%
          'Articles Info .' 50px
          'Articles Info Work' 31.66666667%
          / 1fr 1fr 1fr;
        column-gap: 50px;
        min-height: 600px;
        padding-bottom: 30px;
      }

      .Footer {
        animation: var(--animation-duration) both fade;
        border-top: 0.5px solid rgba(255, 255, 255, 0.1);
        margin-top: 50px;
        padding: 5px 10px;
        color: rgba(255, 255, 255, 0.65);
        font-size: 13rem;
      }

      @media (max-width: 934px) {
        .CardWall {
          width: 100%;
          display: flex;
          flex-direction: column;
          align-items: center;
          gap: 80px;
          max-width: 400px;
        }
      }

      @media (min-width: 935px) and (max-width: 1300px) {
        .CardWall {
          grid-template:
            'Info Talks' 260px
            'Info Social' 100px
            'Info Articles' 260px
            'Code Work' 210px
            / 1fr 1fr;
          gap: 50px;
        }
      }

      @media (prefers-reduced-motion: no-preference) and (min-width: 935px) {
        .Footer {
          animation-delay: 0.4s;
        }
      }
    </style>
    <script>
      const max = 10;
      function tiltOnMouseMove(element: HTMLElement) {
        let width = 0;
        let height = 0;
        let left = 0;
        let top = 0;

        let calculatePositionTimer: number;
        function scheduleCalculatePosition() {
          cancelAnimationFrame(calculatePositionTimer);
          calculatePositionTimer = requestAnimationFrame(() =>
            calculatePosition(),
          );
        }

        function calculatePosition() {
          let rect = element.getBoundingClientRect();

          width = element.offsetWidth;
          height = element.offsetHeight;
          left = rect.left;
          top = rect.top;
        }

        let tiltTimer: number;
        function scheduleTilt(event: MouseEvent) {
          cancelAnimationFrame(tiltTimer);
          tiltTimer = requestAnimationFrame(() => tilt(event));
        }

        let startTiltTimer: number;
        function startTilt() {
          clearTimeout(startTiltTimer);
          element.classList.add('-WithTransition');
          element.classList.add('-WithTilt');
          startTiltTimer = window.setTimeout(() => {
            element.classList.remove('-WithTransition');
          }, 250);
        }

        function tilt(event: MouseEvent) {
          let x = (event.clientX - left) / width;
          let y = (event.clientY - top) / height;

          x = Math.min(Math.max(x, 0), 1);
          y = Math.min(Math.max(y, 0), 1);

          let tiltX = (max - x * max * 2).toFixed(2);
          let tiltY = (y * max * 2 - max).toFixed(2);
          let angle =
            Math.atan2(
              event.clientX - (left + width / 2),
              -(event.clientY - (top + height / 2)),
            ) *
            (180 / Math.PI);

          element.style.setProperty('--tilt-x', `${tiltX}deg`);
          element.style.setProperty('--tilt-y', `${tiltY}deg`);
          element.style.setProperty('--angle', `${angle}deg`);
        }

        function resetTilt() {
          clearTimeout(startTiltTimer);
          cancelAnimationFrame(tiltTimer);

          element.style.setProperty('--tilt-x', `0deg`);
          element.style.setProperty('--tilt-y', `0deg`);
          element.style.setProperty('--angle', `0deg`);
          element.classList.add('-WithTransition');
          element.classList.add('-WithTilt');
        }

        element.addEventListener('mousemove', scheduleTilt);
        element.addEventListener('mouseenter', startTilt);
        element.addEventListener('mouseleave', resetTilt);
        window.addEventListener('resize', scheduleCalculatePosition);
        calculatePosition();
      }

      window.addEventListener('DOMContentLoaded', () => {
        document
          .querySelectorAll('.Card')
          .forEach((element: HTMLElement) => tiltOnMouseMove(element));
      });
    </script>
  </body>
</html>
